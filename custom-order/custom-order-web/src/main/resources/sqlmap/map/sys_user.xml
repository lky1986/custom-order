<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.order.datasource.dao.UserDAO">
	
	<sql id="columns">
		id,<include refid="columnsWidthOutId"/>
	</sql>
	
	<sql id="columnsWidthOutId">
		username,
		password,
		nick_name,
		email,
		phone,
		is_active,
		create_time,
		update_user,
		update_time,
		create_user
	</sql>
	
	<resultMap type="com.order.datasource.domain.User" id="resultUser">
		<result column="id" property="id"/>
		<result column="username" property="username"/>
		<result column="password" property="password"/>
		<result column="nick_name" property="nickName"/>
		<result column="email" property="email"/>
		<result column="phone" property="phone"/>
		<result column="is_active" property="isActive"/>
		<result column="create_time" property="createTime"/>
		<result column="update_user" property="updateUser"/>
		<result column="update_time" property="updateTime"/>
		<result column="create_user" property="createUser"/>
	</resultMap>
			
	<insert id="save">
		insert into sys_user 
			(<include refid="columnsWidthOutId"/>)
		value 
		(
			#{username},	
			#{password},
			#{nickName},
			#{email},
			#{phone},
			true,
			now(),
			#{updateUser},
			now(),
			#{createUser}
		) 	
	</insert>
	
	<update id="update">
		update 
			sys_user 
		set 
			username = #{userCode},	
			password = #{password},
			nick_name = #{nickName},
			email = #{email},
			phone = #{phone},
			is_active = true,
			update_user = #{updateUser},
			update_time = now()
		where
			id = #{id} 
	</update>
	
	<delete id="delete">
		delete from 
			sys_user 
		where 
			id = #{0}
	</delete>
	
	<delete id="deletes">
		delete from 
			sys_user 
		where 
			id in 
			<foreach collection="ids" item="item" open="(" separator="," close=")">  
       			 #{item}   
    		</foreach>
	</delete>
	
	<select id="find" resultMap="resultUser">
		select
			<include refid="columns"/>
		from 
			sys_user 
		where 
			id = #{0}
	</select>
	
	<select id="findCount" resultType="long">
		select
			count(*)
		from
			sys_user
	</select>
	
	<select id="findLimit" resultType="map">
		select
			<include refid="columns"/>
		from
			sys_user
		limit #{0},#{1}
	</select>
	
	<select id="findCountByCondition" resultType="long">
		select
			count(*)
		from
			sys_user
			<include refid="Common.parseFilterRules"/>
	</select>
	
	
	<select id="findPage" resultMap="resultUser">
		select
			<include refid="columns"/>
		from
			sys_user
			<include refid="Common.parseFilterRules"/>
	</select>
	
	<select id="findLimitByCondition" resultMap="resultUser">
		select
			<include refid="columns"/>
		from
			sys_user
			<include refid="Common.parseFilterRules"/>
			limit #{1},#{2}
	</select>
</mapper>